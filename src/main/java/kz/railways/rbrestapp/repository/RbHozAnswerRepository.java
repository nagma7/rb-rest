package kz.railways.rbrestapp.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;

import kz.railways.rbrestapp.entity.RbHozAnswer;

public interface RbHozAnswerRepository  extends CrudRepository<RbHozAnswer, Integer> {
	
	@Query(value="select id, CODE, SUM(c) AS count FROM (SELECT f.id, f.code, COUNT(*) AS c from  rb_in_defects d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_defects def on def.id=d.defects_id"
			+ "	left JOIN rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10)  and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is null and "
			+ "		f.own = 1"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_difficulties d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is null and "
			+ "		f.own = 1"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_other_difficulties d"
			+ "	LEFT join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is NULL and "
			+ "		f.own = 1"
			+ "	group by 1"
			+ "	order BY 1) a GROUP BY code", nativeQuery = true)
	List<RbHozAnswer> findAll(@Param("b_date") String b_date, @Param("e_date") String e_date, @Param("nod") String nod);
	
	@Query(value="select id, CODE, SUM(c) AS count FROM (SELECT f.id, f.code, COUNT(*) AS c from  rb_in_defects d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_defects def on def.id=d.defects_id"
			+ "	left JOIN rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10)  and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is null and "
			+ "		f.own = 1 AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_difficulties d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is null and "
			+ "		f.own = 1 AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_other_difficulties d"
			+ "	LEFT join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "
			+ "		d.dn_id = :nod and "
			+ "		d.deleted_at is NULL and "
			+ "		f.own = 1 AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	order BY 1) a GROUP BY code", nativeQuery = true)
	List<RbHozAnswer> findAllbyStruct(@Param("b_date") String b_date, @Param("e_date") String e_date, @Param("nod") String nod, @Param("st") String st);
	
	@Query(value="select id, CODE, SUM(c) AS count FROM (SELECT f.id, f.code, COUNT(*) AS c from  rb_in_defects d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_defects def on def.id=d.defects_id"
			+ "	left JOIN rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10)  and  "			
			+ "		d.deleted_at is null and "
			+ "		f.own = :own AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_difficulties d"
			+ "	left join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "			
			+ "		d.deleted_at is null and "
			+ "		f.own = :own AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	union all"
			+ " select f.id, f.code  ,count(*) from  rb_in_other_difficulties d"
			+ "	LEFT join rb_struktura_farm sf on sf.farm_id=d.farm_id"
			+ "	left join rb_struktura s on s.id=sf.struktura_id"
			+ "	left join rb_farm f on f.id=d.farm_id"
			+ "	left join rb_difficulties def on def.id=d.difficulties_id"
			+ "	left join rb_classifiers cl on cl.id=def.classifiers_id"
			+ "	where d.deleted_at is null and "
			+ "		d.date >= :b_date and "
			+ "		d.date <= :e_date and "
			+ "		s.code not in (10) and  "
			+ "		d.deleted_at is NULL and "
			+ "		f.own = :own AND "
			+ "		s.id = :st"
			+ "	group by 1"
			+ "	order BY 1) a GROUP BY code order by id", nativeQuery = true)
	List<RbHozAnswer> findAllbyStructNBD(@Param("b_date") String b_date, @Param("e_date") String e_date, @Param("st") String st, @Param("own") int own);
}
